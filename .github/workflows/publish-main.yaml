name: Docker Build and Deploy - MASTER

on:
  push:
    branches:
      - master

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}
          build-args: |
            VITE_FRONTEND_URL=https://printscript-10-prod.duckdns.org/
            VITE_BACKEND_URL=https://printscript-10-prod.duckdns.org/
            VITE_AUTH0_DOMAIN=${{ secrets.VITE_AUTH0_DOMAIN_PROD }}
            VITE_AUTH0_AUDIENCE=${{ secrets.VITE_AUTH0_AUDIENCE_PROD }}
            VITE_AUTH0_CLIENT_ID=${{ secrets.VITE_AUTH0_CLIENT_ID_PROD }}
            VITE_AUTH0_USERNAME=${{ secrets.VITE_AUTH0_USERNAME_PROD }}
            VITE_AUTH0_PASSWORD=${{ secrets.VITE_AUTH0_PASSWORD_PROD }}

  pull-and-run-image:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.0
        env:
          USERNAME: ${{ secrets.GHCR_USERNAME }}
          TOKEN: ${{ secrets.TOKEN }}
        with:
          host: ${{ secrets.DEV_EC2_HOST_DNS }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: USERNAME, TOKEN
          script: |
            cd infra
            sudo docker login --username $USERNAME --password $TOKEN ghcr.io
            sudo docker-compose -f docker-compose.prod.yml stop printscript-ui
            sudo docker system prune --force
            sudo docker-compose -f docker-compose.prod.yml pull printscript-ui
            sudo docker-compose -f docker-compose.prod.yml up -d printscript-ui
